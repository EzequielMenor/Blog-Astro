---
import Layout from '../layouts/Layout.astro';
---

<Layout title='Crear Nuevo Post'>
	<main class='containter mx-auto px-4 py-8'>
		<h1 class='text-4xl font-bold mb-8 text-center'>Crear Nuevo Post del Blog</h1>

		<form id='newPostForm' class='max-w-3xl mx-auto bg-white p-8 rounded-lg shadow-md'>
			<div class='mb-6'>
				<label for='title' class='block text-gray-700 text-sm font-bold mb-2'>Titulo: </label>
				<input
					type='text'
					id='title'
					name='title'
					required
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'
				/>
			</div>

			<div class='mb-6'>
				<label for='author' class='block text-gray-700 text-sm font-bold mb-2'>Autor: </label>
				<input
					type='text'
					id='author'
					name='author'
					required
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'
				/>
			</div>

			<div class='mb-6'>
				<label for='description' class='block text-gray-700 text-sm font-bold mb-2'>Descripción: </label>
				<textarea
					name='description'
					id='description'
					rows='3'
					required
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'>
				</textarea>
			</div>

			<div class='mb-6'>
				<label for='image' class='block text-gray-700 text-sm font-bold mb-2'>URL de la imagen destacada (Opcional): </label>
				<input
					type='url'
					id='image'
					name='image'
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'
				/>
				<small class='text-gray-500 text-xs italic'>Ej: /assets/imagen.jpg o https://example.com/imagen.jpg </small>
			</div>

			<div class='mb-6'>
				<label for='tags' class='block text-gray-700 text-sm font-bold mb-2'>Etiquetas (Separadas por comas): </label>
				<input
					type='text'
					id='tags'
					name='tags'
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'
				/>
				<small class='text-gray-500 text-xs italic'>Ej: programacion, astro, tutorial</small>
			</div>

			<div class='mb-6'>
				<label for='body' class='block text-gray-700 text-sm font-bold mb-2'>Contenido del Post (Markdown): </label>
				<textarea
					name='body'
					id='body'
					rows='15'
					required
					class='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:shadow-outline focus:outline-none'>
				</textarea>
			</div>

			<div class='flex items-center justify-between'>
				<button
					type='submit'
					class='bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-150 ease-in-out'>
					Crear Post
				</button>
				<p id='message' class='text-sm font-medium'></p>
			</div>
		</form>
	</main>
</Layout>

<script is:inline>
	document.getElementById('newPostForm').addEventListener('submit', async function (event) {
		//Evita el envío tradicional del formulario
		event.preventDefault();

		const messageElement = document.getElementById('message');
		messageElement.textContent = 'Guardando...';
		messageElement.className = 'text-blue-600 text-sm font-medium';

		const formData = new FormData(this);
		const data = {};
		for (let [key, value] of formData.entries()) {
			data[key] = value;
		}

		// Dividir las etiquetas por comas y limpiarlas
		if (data.tags) {
			data.tags = data.tags
				.split(',')
				.map((tag) => tag.trim()) // Primero, mapea y recorta cada etiqueta
				.filter((tag) => tag.length > 0); // Luego, filtra las vacías del array
		} else {
			data.tags = [];
		}

		try {
			//Para enviar los datos al endpoint de API de Astro
			const response = await fetch('/api/create-post', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(data),
			});

			const result = await response.json();

			if (response.ok) {
				messageElement.textContent = result.message + ' Redirigiendo...';
				messageElement.className = 'text-green-600 text-sm font-medium';
				setTimeout(() => {
					window.location.href = '/post-creado';
				}, 2000);
			} else {
				messageElement.textContent = 'Error: ' + (result.message || 'No se pudo crear el post');
				messageElement.className = 'text-red-600 text-sm font-medium';
			}
		} catch (error) {
			console.error('Error al enviar el formulario: ', error);
			messageElement.textContent = 'Error de conexión. Intentalo de nuevo';
			messageElement.className = 'text-red-600 text-sm font-medium';
		}
	});
</script>
